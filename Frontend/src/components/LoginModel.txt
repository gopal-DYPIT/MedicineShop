import React, { useState, useEffect } from "react";
import { BsFillShieldLockFill, BsTelephoneFill } from "react-icons/bs";
import { CgSpinner } from "react-icons/cg";
import OtpInput from "otp-input-react";
import PhoneInput from "react-phone-input-2";
import "react-phone-input-2/lib/style.css";
import { toast, Toaster } from "react-hot-toast";
import CompanyIcon from "../assets/CompanyIcon.png";



const LoginModal = ({ isOpen, handleClose }) => {
  const [otp, setOtp] = useState("");
  const [ph, setPh] = useState("");
  const [loading, setLoading] = useState(false);
  const [showOTP, setShowOTP] = useState(false);

  const {user, loginWithPopup} = useAuth0();
  console.log(user)

  useEffect(() => {
    const handleEscape = (e) => {
      if (e.key === "Escape") {
        handleClose();
      }
    };
    document.addEventListener("keydown", handleEscape);
    return () => {
      document.removeEventListener("keydown", handleEscape);
    };
  }, [handleClose]);

  const handleSendOTP = () => {
    setLoading(true);
    // Placeholder for sending OTP via new authentication service
    setTimeout(() => {
      setLoading(false);
      setShowOTP(true);
      toast.success("OTP sent successfully!");
    }, 1000);
  };

  const handleVerifyOTP = () => {
    setLoading(true);
    // Placeholder for verifying OTP via new authentication service
    setTimeout(() => {
      setLoading(false);
      toast.success("Login successful!");
      handleClose();
    }, 1000);
  };

  return (
    <>
      {isOpen && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center">
          <div className="bg-white p-6 rounded-lg w-96 shadow-lg flex flex-col items-center space-y-4">
            <button
              className="absolute top-2 right-2 text-gray-700 text-2xl"
              onClick={handleClose}
            >
              &times;
            </button>

            <div className="flex flex-col space-y-2">
              <img
                src={CompanyIcon}
                alt="PlatinumRx"
                className="w-32 h-10 mx-auto block"
              />

              {showOTP ? (
                <>
                  <div className="bg-white text-emerald-500 w-fit mx-auto p-4 rounded-full">
                    <BsFillShieldLockFill size={30} />
                  </div>
                  <label htmlFor="otp" className="font-bold text-xl text-center">
                    Enter your OTP
                  </label>
                  <OtpInput
                    value={otp}
                    onChange={setOtp}
                    OTPLength={6}
                    otpType="number"
                    autoFocus
                    className="opt-container"
                  />
                  <button
                    onClick={handleVerifyOTP}
                    className="bg-emerald-600 w-full flex gap-1 items-center justify-center py-2.5 text-white rounded"
                  >
                    {loading && (
                      <CgSpinner size={20} className="mt-1 animate-spin" />
                    )}
                    <span>Verify OTP</span>
                  </button>
                </>
              ) : (
                <>
                  <div className="bg-white text-emerald-500 w-fit mx-auto p-4 rounded-full">
                    <BsTelephoneFill size={30} />
                  </div>
                  <label
                    htmlFor="phone"
                    className="font-bold text-xl text-center"
                  >
                    Verify your phone number
                  </label>
                  <PhoneInput
                    country="in"
                    value={ph}
                    onChange={setPh}
                    inputProps={{
                      name: "phone",
                      required: true,
                      autoFocus: true,
                    }}
                  />
                  <button
                    onClick={handleSendOTP}
                    className={`bg-emerald-600 w-full flex gap-1 items-center justify-center py-2.5 text-white rounded ${
                      !ph ? "opacity-50 cursor-not-allowed" : ""
                    }`}
                    disabled={!ph}
                  >
                    {loading && (
                      <CgSpinner size={20} className="mt-1 animate-spin" />
                    )}
                    <span>Send OTP</span>
                  </button>
                </>
              )}
            </div>

            <div className="text-sm text-gray-500 mt-2">
              By clicking, I accept the{" "}
              <span className="text-blue-600 hover:underline cursor-pointer">
                Terms of Service
              </span>{" "}
              &{" "}
              <span className="text-blue-600 hover:underline cursor-pointer">
                Privacy Policy
              </span>
            </div>
          </div>
        </div>
      )}
      <Toaster toastOptions={{ duration: 4000 }} />
    </>
  );
};

export default LoginModal;
